# my global config
global:
  scrape_interval:     15s # 15초마다 매트릭을 수집한다. (Default : 1분)
  scrape_timeout:      15s # 요청 후 최대 15초 동안 응답을 기다린다. (Default : 10초)
  evaluation_interval: 1m  # rule_files에 명시된 규칙을 1분 동안 확인한다. (Default : 1분)
  
  # The labels to add to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: 'joy-monitor' # 기본적으로 붙여줄 라벨

  # File to which PromQL queries are logged.
  # Reloading the configuration will reopen the file.
  query_log_file: promql_query_log.log # prometheus의 쿼리 로그들을 기록, 없으면 기록안함

# Rule files specifies a list of globs. Rules and alerts are read from
# all matching files.
# 규칙을 처음 한번 로딩하고 'evaluation_interval'설정에 따라 정기적으로 규칙을 평가한다.
rule_files:
  # - "first_rules.yml" # 파일위치는 prometheus.yml 이 있는 곳과 동일 위치
  # - "second_rules.yml" # 여러개 가능

# A list of scrape configurations.
# 매트릭을 수집할 엔드포인트를 설정.
# 여기서는 Prometheus 서버(9090) 자신을 가리키는 설정, [''] 안에 추가하면 됨
scrape_configs:
  # 이 설정에서 수집한 타임시리즈에 'job=<job_name>'으로 잡의 이름을 설정한다.
  # metrics_path의 기본 경로는 '/metrics'이고 scheme의 기본값은 `http`다
  - job_name: 'prometheus'
    # 'metrics_path'라는 설정의 기본 값은 '/metrics'이고
    # 'scheme'라는 설정의 기본 값은 'http'이다.
    
    # List of labeled statically configured targets for this job.
    # 실제 scrap 하는 타겟에 관한 설정
    static_configs: # 대상에 대한 설정
      - targets: ['localhost:9090'] # prometheus
        labels: # 옵션 - scrap 해서 가져올 metrics 들 전부에게 붙여줄 라벨
          group: 'prometheus'
  - job_name: 'node_exporter'
    scrape_interval: 15s
    static_configs:
      - targets: ['localhost:9100']
  - job_name: 'sample_app'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    static_configs:
    - targets: ['localhost:8888']
# Alerting specifies settings related to the Alertmanager.
# Alertmanager 설정
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

